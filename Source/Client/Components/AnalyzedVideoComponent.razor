@using Client.BuildingBlocks.Modals
@inject IModalService modalService

<div class="p-1 bg-white border-grey-300 mt-1 rounded border">
    <div>
        <h3 class="text-xs font-semibold">@VideoDTO.VideoName</h3>
    </div>
    <div class="mt-1 flex flex-row justify-between">
        <div class="gap-x-2 flex flex-row">
            <h6 @onclick="async () => await OpenVideoAnalysisModalAsync()" class="text-orange cursor-pointer text-xs" href="@VideoDTO.Url" target="_blank">Analyse</h6>
            <a class="text-orange cursor-pointer text-xs" href="@VideoDTO.Url" target="_blank">Video</a>
        </div>

        <div class="text-xs">
            Comments: <span class="font-semibold">@VideoDTO.VideoComments.Count</span>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public YouTubeVideoAnalysisDTO VideoDTO { get; set; }

    private IModalReference modalReference;

    private async Task OpenVideoAnalysisModalAsync()
    {
        var parameters = new ModalParameters
            {
                { nameof(VideoAnalysisModal.ModalExitedCallback), new EventCallback(this, async () => { modalReference.Close(); })},
                { nameof(VideoAnalysisModal.VideoAnalysis), VideoDTO },
            };

        modalReference = modalService.Show<VideoAnalysisModal>(string.Empty, parameters, DefaultModalOptions.DefaultModal);
    }
}
